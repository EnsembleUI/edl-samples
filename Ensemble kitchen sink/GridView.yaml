View:
  header:
    title: GridView
  
  styles:
    scrollableView: true

  onLoad:
    invokeAPI:
      name: getPeople
  
  Column: 
    styles: { gap: 16, padding: 24 }  
    children:
      - Text:
          text: Grid with 2 items per row
      - GridView:
          styles:
            height: 400
            horizontalGap: 8
            verticalGap: 8
            horizontalTileCount: 2
            itemHeight: 128
          item-template:
            data: ${getPeople.body.results}
            name: person
            template:
              PersonCard:
                inputs:
                  p: ${person}
      - Divider
      - Markdown:
          text: |
            ### Reponsive grid
            You can pass 1, 3, or 5 values to `horizontalTileCount` property to make the grid responsive based on predefined set of breakpoints.

            | Breakpoint | Width |  
            | --- | --- |
            | xSmall | width <= 480 |
            | Small  |  width > 480 && width <= 800 |
            | Medium |  width > 800 && width <= 1200 |
            | Large  |  width > 1200 && width <= 1600 |
            | XLarge |  width > 1600 |

            GridView's horizontalTileCount can be:

            a) 1 number - number of tiles for all breakpoints
            b) 3 numbers

              * first number corresponds to xSmall and Small,
              * second number corresponds to Medium
              * last numner corresponds to xLarge and Large

            c) 5 numbers, corresponding to each breakpoint

            When not specified, the horizontal tile count is automatic based on resolution.
      
            ---
            
            In this example, depending on the available width, there will be 3 to 5 items per row.

      - GridView:
          styles:
            height: 400
            horizontalGap: 8
            verticalGap: 8
            horizontalTileCount: 3 4 5
            itemHeight: 112
          item-template:
            data: ${getPeople.body.results}
            name: person
            template:
              PersonCardSmall:
                inputs:
                  p: ${person}
PersonCard:
  inputs:
    - p
  Column:
    styles:
      shadowColor: 0x11000000
      crossAxis: center
      shadowRadius: 3
      borderRadius: 8
      backgroundColor: 0xFFFFFFFF
      padding: 16 4 8 4
    children:
      - Image:
          styles: {  height: 50, width: 50, borderRadius: 50 }
          source: ${p.picture.medium}
      - Text:
          styles: { fontWeight: bold, overflow: ellipsis, textAlign: center, margin: 8 0 4 0 }
          text: ${p.name.first} ${p.name.last}
      - Text:
          styles: { textAlign: center }
          text: ${p.location.country}
  
PersonCardSmall:
  inputs:
    - p
  Column:
    styles:
      shadowColor: 0x11000000
      crossAxis: center
      shadowRadius: 3
      borderRadius: 8
      backgroundColor: 0xFFFFFFFF
      padding: 16 4 8 4
    children:
      - Image:
          styles: {  height: 40, width: 40, borderRadius: 40 }
          source: ${p.picture.medium}
      - Text:
          styles: { overflow: ellipsis, textAlign: center, margin: 8 0 2 0 }
          text: ${p.name.first}
      - Text:
          styles: { fontWeight: bold, overflow: ellipsis, textAlign: center }
          text: ${p.name.last}


API:
  getPeople:
    uri: https://randomuser.me/api/?results=6
    method: GET